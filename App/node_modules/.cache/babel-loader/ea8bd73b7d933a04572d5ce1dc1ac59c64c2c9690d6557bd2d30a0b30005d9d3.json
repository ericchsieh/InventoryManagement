{"ast":null,"code":"var _jsxFileName = \"/Users/erichsieh/Documents/GitHub/project_g2i4q_g9y0b_s0q8j/cpsc304-app/src/components/TicketRow.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TicketRow = _ref => {\n  let {\n    ticket,\n    resolved\n  } = _ref;\n  if (ticket.status == \"Resolved\" == resolved) {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: ticket.ticket_number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: ticket.status == null ? \"Available\" : ticket.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: resolved ? ticket.date_resolved : ticket.date_created\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: ticket.submitted_by\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: ticket.reserved_assets.map((asset, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"btn btn-light\",\n          children: asset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this);\n  } else {\n    return null;\n  }\n};\n_c = TicketRow;\nexport default TicketRow;\nvar _c;\n$RefreshReg$(_c, \"TicketRow\");","map":{"version":3,"names":["React","TicketRow","ticket","resolved","status","ticket_number","date_resolved","date_created","submitted_by","reserved_assets","map","asset","index"],"sources":["/Users/erichsieh/Documents/GitHub/project_g2i4q_g9y0b_s0q8j/cpsc304-app/src/components/TicketRow.js"],"sourcesContent":["import React from \"react\";\n\nconst TicketRow = ({ ticket, resolved }) => {\n    if ((ticket.status == \"Resolved\") == resolved) {\n        return (\n            <tr>\n                <td>{ticket.ticket_number}</td>\n                <td>{ticket.status == null ? \"Available\" : ticket.status}</td>\n                <td>{resolved ? ticket.date_resolved : ticket.date_created}</td>\n                <td>{ticket.submitted_by}</td>\n                <td>\n                    {\n                        ticket.reserved_assets.map((asset, index) => (\n                            <button type=\"button\" class=\"btn btn-light\">\n                                {asset}\n                            </button>\n                        ))\n                    }\n                </td>\n            </tr>\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default TicketRow;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,SAAS,GAAG,QAA0B;EAAA,IAAzB;IAAEC,MAAM;IAAEC;EAAS,CAAC;EACnC,IAAKD,MAAM,CAACE,MAAM,IAAI,UAAU,IAAKD,QAAQ,EAAE;IAC3C,oBACI;MAAA,wBACI;QAAA,UAAKD,MAAM,CAACG;MAAa;QAAA;QAAA;QAAA;MAAA,QAAM,eAC/B;QAAA,UAAKH,MAAM,CAACE,MAAM,IAAI,IAAI,GAAG,WAAW,GAAGF,MAAM,CAACE;MAAM;QAAA;QAAA;QAAA;MAAA,QAAM,eAC9D;QAAA,UAAKD,QAAQ,GAAGD,MAAM,CAACI,aAAa,GAAGJ,MAAM,CAACK;MAAY;QAAA;QAAA;QAAA;MAAA,QAAM,eAChE;QAAA,UAAKL,MAAM,CAACM;MAAY;QAAA;QAAA;QAAA;MAAA,QAAM,eAC9B;QAAA,UAEQN,MAAM,CAACO,eAAe,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACpC;UAAQ,IAAI,EAAC,QAAQ;UAAC,KAAK,EAAC,eAAe;UAAA,UACtCD;QAAK;UAAA;UAAA;UAAA;QAAA,QAEb;MAAC;QAAA;QAAA;QAAA;MAAA,QAEL;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAEb,CAAC,MAAM;IACH,OAAO,IAAI;EACf;AACJ,CAAC;AAAA,KAtBKV,SAAS;AAwBf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}